//Arduino Maker Workshop
//–©–æ–± —Å—Ç–≤–æ—Ä–∏—Ç–∏ —Ñ–∞–π–ª –∫–æ—à–∏–∫–∞, –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å [Complite] –≤–Ω–∏–∑—É –ø—Ä–∞–≤–æ—Ä—É—á
//—Ñ–∞–π–ª bin –∫–æ–ø—ñ—é—î—Ç—å—Å—è –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è–º [Ctrl+Shift+B] —Ç–∞ –≤–∏–±–æ—Ä–æ–º [build+copy] —ñ –∑–Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –ø–æ—Ä—É—á –∑ ino

const char* wifiList[][2] = {
  {"deti_podzemelia", "12345678"},
  {"Xiaomi 14T", ""},
  {"Ingener_Technology", ""}
};

#define BOT_TOKEN "7714508177:AAEt_BhjKln3t6FgsjBMV5biA4iMw6zKw-E" // 
#define relePin   4 // –Ω–æ–º–µ—Ä –∫–æ–Ω—Ç–∞–∫—Ç—É –¥–ª—è –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è —Ä–µ–ª–µ
#define POWER_PIN A0
#define CHAT_ID_ADMIN "1031379571"
String myNameBot = "–ì–æ–ª–æ–≤–Ω–∏–π –∫–æ–º–ø'—é—Ç–µ—Ä";
int POWER, OnPC = 0, OffPC = 0, OnOffPower,rowsWifiList;
  String PC = "";

#include <FastBot.h>                      //https://github.com/GyverLibs/FastBot
FastBot bot(BOT_TOKEN);
#include <LittleFS.h>
#include <ArduinoJson.h>
unsigned long workTime = 0,onPcTime = 0, lastMillis = 0, lastOnPC = 0;



void setup()
{
  Serial.begin(115200);
  pinMode(POWER_PIN, INPUT);
  
  int raw = analogRead(POWER_PIN);
  float voltage = (raw / 1024.0 * 5.0);
  if (voltage > 3.0)
  {
    POWER = 1;//on
  }
  else
  {
    POWER = 0;//off
  }
  OnOffPower = POWER;

  pinMode(relePin, OUTPUT);               // –Ω–∞–ª–∞—à—Ç–æ–≤—É—î–º–æ –∫–æ–Ω—Ç–∞–∫—Ç –¥–ª—è —Ä–µ–ª–µ —è–∫ –≤–∏—Ö—ñ–¥
  digitalWrite(relePin, 1);            // –≤–∏–º–∏–∫–∞—î–º–æ —Ä–µ–ª–µ
  
  loadData();  // –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –¥–∞–Ω—ñ

  rowsWifiList = (sizeof(wifiList) / sizeof(wifiList[0]));

  OnPC = onPcTime;
  OffPC = workTime - OnPC;
  
  delay(1000);
  connectWiFi();                          // –ø—ñ–¥–∫–ª—é—á–∞—î–º–æ—Å—è –¥–æ –º–µ—Ä–µ–∂—ñ
  
  
  if (!LittleFS.begin()) {
    Serial.println("‚ùå –ü–æ–º–∏–ª–∫–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó LittleFS");
    bot.sendMessage("‚ùå –ü–æ–º–∏–ª–∫–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó LittleFS", CHAT_ID_ADMIN);
    return;
  }

  Serial.println("\nWEMOS: —É–≤—ñ–º–∫–Ω—É–≤—Å—è!");
  // bot.sendMessage("WEMOS: —É–≤—ñ–º–∫–Ω—É–≤—Å—è! \n/start", CHAT_ID_ADMIN);

  bot.attach(newMsg);                     // –ø—ñ–¥–∫–ª—é—á–∞—î–º–æ —Ñ—É–Ω–∫—Ü—ñ—é - –æ–±—Ä–æ–±–Ω–∏–∫ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
}

// –æ—Å–Ω–æ–≤–Ω–∏–π —Ü–∏–∫–ª
void loop()
{

  workTime += millis()-lastMillis;  // –î–æ–¥–∞—î–º–æ —á–∞—Å —Ä–æ–±–æ—Ç–∏
  onPcTime = OnPC;  // –û–Ω–æ–≤–ª—é—î–º–æ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É
  lastMillis = millis();
  saveData();  // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –Ω–æ–≤—ñ –¥–∞–Ω—ñ
  bot.tick();
  
  int raw = analogRead(POWER_PIN);
  float voltage = (raw / 1024.0 * 5.0);

  if(voltage > 3)
  {
    POWER = 1;//on
    OnPC = workTime - OffPC;
  }
  else if(voltage < 3)
  {
    POWER = 0;//off
    OffPC = workTime - OnPC;
  }

  if (OnOffPower < POWER)
  {
    OnOffPower = POWER;
    bot.sendMessage("‚úÖ–í–≤—ñ–º–∫–Ω—É–≤—Å—è", CHAT_ID_ADMIN);
  }
  else if (OnOffPower > POWER)
  {
    OnOffPower = POWER;
    bot.sendMessage("‚ùå–í–∏–º–∫–Ω—É–≤—Å—è", CHAT_ID_ADMIN);
  }

  //—è–∫—â–æ –º–∏–Ω—É–ª–æ 1 –¥–æ–±–∏, —Ç–æ –ø–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂–∏–º–æ—Å—è
  if (millis() / 1000 / 60 / 60 >= 1  /*&& voltage < 4.0*/)
  {
    // bot.sendMessage(myNameBot + ": . –ü–µ—Ä–µ–≤–∞–Ω—Ç–∞–∂—É—é—Å—å...", CHAT_ID_ADMIN);
    ESP.restart();
  }
}
// –û–±—Ä–æ–±–Ω–∏–∫ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
void newMsg(FB_msg& msg)
{
  int raw = analogRead(POWER_PIN);
  float voltage = (raw / 1024.0 * 6.0);

  Serial.println("\n\n\n" + msg.text + "\n\n\n");

  uint32_t curentTime, messageTime;
  String msgText = msg.text;              // —ñ–∑ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤–∏–¥—ñ–ª—è—î–º–æ —Å–∞–º —Ç–µ–∫—Å—Ç
  String from_name = msg.username;        // —ñ–∑ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤–∏–¥—ñ–ª—è—î–º–æ —Ö—Ç–æ –Ω–∞–¥—ñ—Å–ª–∞–≤
  if (from_name == "")
    from_name = "–ê–Ω–æ–Ω–∏–º";

  int32_t msgID = msg.messageID;  // ID —Å–æ–æ–±—â–µ–Ω–∏—è

  // –æ–±–Ω–æ–≤–∏—Ç—å, –µ—Å–ª–∏ —Ñ–∞–π–ª –∏–º–µ–µ—Ç –Ω—É–∂–Ω—É—é –ø–æ–¥–ø–∏—Å—å
  if (msg.OTA /*&& msg.text == "ADMIN"*/)bot.update();


  curentTime = bot.getUnix();     // –ø–æ—Ç–æ—á–Ω–∏–π —á–∞—Å –≤ –Æ–ù–Ü–ö–° —Ñ–æ—Ä–º–∞—Ç—ñ
  messageTime = msg.unix - 2;     // –∑–º–µ–Ω—à–∏–º–æ —á–∞—Å –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —â–æ–± —É–Ω–∏–∫–Ω—É—Ç–∏ –≥–ª—é–∫


  // –æ–±—Ä–æ–±–ª—è—î–º–æ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è —Å–æ—Ñ—Ç-–∫–Ω–æ–ø–∫–∏ –≤ —é–∑–µ—Ä –º–µ–Ω—é –≤ –º–µ—Å–µ–Ω–¥–∂–µ—Ä—ñ

  if (msgText == "/start")         // —Ñ–æ—Ä–º—É—î–º–æ —é–∑–µ—Ä –º–µ–Ω—é –∑ —Å–æ—Ñ—Ç –∫–Ω–æ–ø–∫–∞–º–∏
  {
    bot.tickManual();  // –°–∫–∏–¥–∞—î–º–æ –∫–µ—à –æ—Ç—Ä–∏–º–∞–Ω–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
    //String welcome = "–í—ñ—Ç–∞—é, " + from_name + ".\n";
    bot.sendMessage("–í—ñ—Ç–∞—é, " + from_name + ".", msg.chatID);
    Serial.println("\n–í—ñ—Ç–∞—é, " + from_name + ".\n");

    // –ø–æ–∫–∞–∑–∞—Ç–∏ —é–∑–µ—Ä –º–µ–Ω—é (\t - –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–∏–π –ø–æ–¥—ñ–ª –∫–Ω–æ–ø–æ–∫, \n - –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–∏–π
    bot.showMenu("–£–≤—ñ–º–∫–Ω—É—Ç–∏ \t  –í–∏–º–∫–Ω—É—Ç–∏ \n –ê–ø—Ç–∞–π–º \t –°—Ç–∞–Ω \t –†–µ—Å–µ—Ç", msg.chatID);
  }

  if (msgText == "–£–≤—ñ–º–∫–Ω—É—Ç–∏")
  {
    bot.tickManual();  // –°–∫–∏–¥–∞—î–º–æ –∫–µ—à –æ—Ç—Ä–∏–º–∞–Ω–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
    if (voltage < 4.0)
    {
      digitalWrite(relePin, 0);             // –≤–º–∏–∫–∞—î–º–æ —Ä–µ–ª–µ
      delay(500);
      digitalWrite(relePin, 1);
    }
    else
    {
      bot.sendMessage("–£–≤—ñ–º–∫–Ω–µ–Ω–∏–π", msg.chatID);
    }
  }

  if (msgText == "–í–∏–º–∫–Ω—É—Ç–∏")
  {
    bot.tickManual();  // –°–∫–∏–¥–∞—î–º–æ –∫–µ—à –æ—Ç—Ä–∏–º–∞–Ω–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
    if (voltage > 4.0)
    {
      digitalWrite(relePin, 0);            // –≤–∏–º–∏–∫–∞—î–º–æ —Ä–µ–ª–µ
      delay(500);
      digitalWrite(relePin, 1);
    }
    else
    {
      bot.sendMessage("–í–∏–º–∫–Ω–µ–Ω–∏–π", msg.chatID);
    }
  }

  if (msgText == "–°—Ç–∞–Ω")
  {
    bot.tickManual();  // –°–∫–∏–¥–∞—î–º–æ –∫–µ—à –æ—Ç—Ä–∏–º–∞–Ω–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
    if (voltage > 4.0)
      {
        PC = ": –ø—Ä–∞—Ü—é—î.‚úÖ";
      }
    else
      {
        PC = ": –Ω–µ –ø—Ä–∞—Ü—é—î.‚ùå";
      }
    bot.sendMessage(myNameBot + PC + "\nChat ID: " + String(msg.chatID) + "\nAnalog: " + String(voltage) + "\n" + rowsWifiList, msg.chatID);
    bot.sendMessage("–ü—ñ–¥–∫–ª—é—á–µ–Ω–æ –¥–æ Wi-Fi: " + String(WiFi.SSID()) + " | " + myNameBot, CHAT_ID_ADMIN);
    Serial.println(myNameBot + PC + "\nChat ID: " + String(msg.chatID) + "\nAnalog: " + String(voltage) + "\n" + rowsWifiList + "\n");
  }

  if (msgText == "–ê–ø—Ç–∞–π–º")
  {
    bot.tickManual();  // –°–∫–∏–¥–∞—î–º–æ –∫–µ—à –æ—Ç—Ä–∏–º–∞–Ω–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
    unsigned long myTime = workTime;
    int mymin = myTime / 1000 / 60;
    int myhour = mymin / 60;
    int myday = myhour / 24;

    String msg0 = String((myTime /1000) % 60);
    String msg1 = String(mymin % 60);
    String msg2 = String(myhour % 24);
    String msg3 = String(myday);
    String msgs = String(myNameBot + "- WEMOS: –ø—Ä–∞—Ü—é—î \n" + msg3 + " –¥—ñ–± " + msg2 + " –≥–æ–¥–∏–Ω " + msg1 + " —Ö–≤–∏–ª–∏–Ω " + msg0 + " —Å–µ–∫—É–Ω–¥");
    
    myTime = OnPC;
    mymin = myTime / 1000 / 60;
    myhour = mymin / 60;
    myday = myhour / 24;
    msg0 = String((myTime /1000) % 60);
    msg1 = String(mymin % 60);
    msg2 = String(myhour % 24);
    msg3 = String(myday);
    String msgOnPC = String(myNameBot + ": –ø—Ä–∞—Ü—é—î \n" + msg3 + " –¥—ñ–± " + msg2 + " –≥–æ–¥–∏–Ω " + msg1 + " —Ö–≤–∏–ª–∏–Ω " + msg0 + " —Å–µ–∫—É–Ω–¥");
    
    myTime = OffPC;
    mymin = myTime / 1000 / 60;
    myhour = mymin / 60;
    myday = myhour / 24;
    msg0 = String((myTime /1000) % 60);
    msg1 = String(mymin % 60);
    msg2 = String(myhour % 24);
    msg3 = String(myday);
    String msgOffPC = String(myNameBot + ": –≤ –æ—á—ñ–∫—É–≤–∞–Ω—ñ \n" + msg3 + " –¥—ñ–± " + msg2 + " –≥–æ–¥–∏–Ω " + msg1 + " —Ö–≤–∏–ª–∏–Ω " + msg0 + " —Å–µ–∫—É–Ω–¥");

    bot.sendMessage(msgs + "\n\n" + msgOnPC + "\n\n" + msgOffPC + "\n\n", msg.chatID);
    Serial.println(msgs + "\n\n" + msgOnPC + "\n\n" + msgOffPC + "\n\n");
  }

  if (msgText == "–†–µ—Å–µ—Ç")
  {
    bot.tickManual();  // –°–∫–∏–¥–∞—î–º–æ –∫–µ—à –æ—Ç—Ä–∏–º–∞–Ω–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
    bot.sendMessage(myNameBot +": –ü–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂—É—î—Ç—å—Å—è.....", msg.chatID);
    Serial.println("\n" + myNameBot +": –ü–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂—É—î—Ç—å—Å—è.....\n");
    ESP.restart();
  }

  if (msgText == "/remove")
  {
    bot.tickManual();  // –°–∫–∏–¥–∞—î–º–æ –∫–µ—à –æ—Ç—Ä–∏–º–∞–Ω–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
    deleteJSON();  // –í–∏–¥–∞–ª—è—î–º–æ JSON-—Ñ–∞–π–ª
    ESP.restart();
  }
  
}

void connectWiFi()
{

  Serial.println("\nüîç –ü–æ—à—É–∫ Wi-Fi\n");

  unsigned long startAttemptTime;  // –ü–æ—á–∞—Ç–∫–æ–≤–∏–π —á–∞—Å –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è

  for (int i = 0; i < rowsWifiList - 1; i++) {
    Serial.println("–ü—Ä–æ–±—É—é –ø—ñ–¥–∫–ª—é—á–∏—Ç–∏—Å—è –¥–æ " + String(wifiList[i][0]) + " | " + myNameBot);
    WiFi.begin(wifiList[i][0], wifiList[i][1]);

    startAttemptTime = millis();
    while (WiFi.status() != WL_CONNECTED && (millis() - startAttemptTime) < 5000) {
      delay(500);
    }
    Serial.println(String(millis() - startAttemptTime));
    
    digitalWrite(LED_BUILTIN, WiFi.status() == WL_CONNECTED ? LOW : HIGH);

    if (WiFi.status() == WL_CONNECTED) {
      Serial.println("\n‚úÖ –ü—ñ–¥–∫–ª—é—á–µ–Ω–æ –¥–æ Wi-Fi: " + String(WiFi.SSID()) + " | " + myNameBot);
      Serial.println("üì° IP-–∞–¥—Ä–µ—Å–∞: " + WiFi.localIP().toString() + "\n");
      break;  // –í–∏–π—Ç–∏ –∑ —Ü–∏–∫–ª—É, —è–∫—â–æ –ø—ñ–¥–∫–ª—é—á–∏–ª–∏—Å—è
    }
  }
  if (WiFi.status() != WL_CONNECTED)
  {
    Serial.println("\n‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –ø—ñ–¥–∫–ª—é—á–∏—Ç–∏—Å—è –¥–æ –∂–æ–¥–Ω–æ—ó –º–µ—Ä–µ–∂—ñ.\n –ü–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂—É—é... | " + myNameBot);
    ESP.restart();
  }
}

// –§—É–Ω–∫—Ü—ñ—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è JSON —É —Ñ–∞–π–ª
void saveData() {
  StaticJsonDocument<200> doc;
  doc["workTime"] = workTime;
  doc["onPcTime"] = onPcTime;
  // doc["lastMillis"] = lastMillis;

  File file = LittleFS.open("/data.json", "w");
  if (!file) {
    Serial.println("‚ùå –ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–∫—Ä–∏—Ç—Ç—è —Ñ–∞–π–ª—É –¥–ª—è –∑–∞–ø–∏—Å—É (–≤—ñ–¥—Å—É—Ç–Ω—ñ–π)");
    bot.sendMessage("‚ùå –ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–∫—Ä–∏—Ç—Ç—è —Ñ–∞–π–ª—É –¥–ª—è –∑–∞–ø–∏—Å—É (–≤—ñ–¥—Å—É—Ç–Ω—ñ–π)", CHAT_ID_ADMIN);
    return;
  }

  serializeJson(doc, file);  // –ó–∞–ø–∏—Å JSON —É —Ñ–∞–π–ª 
  file.close();
  Serial.println("‚úÖ –î–∞–Ω—ñ –∑–±–µ—Ä–µ–∂–µ–Ω–æ —É JSON!");
}


// –§—É–Ω–∫—Ü—ñ—è –∑—á–∏—Ç—É–≤–∞–Ω–Ω—è JSON –∑ —Ñ–∞–π–ª—É
void loadData() {
  File file = LittleFS.open("/data.json", "r");
  if (!file) {
    Serial.println("‚ö†Ô∏è –§–∞–π–ª –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ, —Å—Ç–≤–æ—Ä—é—î–º–æ –Ω–æ–≤–∏–π");
    bot.sendMessage("‚ö†Ô∏è –§–∞–π–ª –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ, —Å—Ç–≤–æ—Ä—é—î–º–æ –Ω–æ–≤–∏–π", CHAT_ID_ADMIN);
    saveData();  // –°—Ç–≤–æ—Ä—é—î–º–æ —Ñ–∞–π–ª —ñ–∑ –ø–æ—á–∞—Ç–∫–æ–≤–∏–º–∏ –∑–Ω–∞—á–µ–Ω–Ω—è–º–∏
    return;
  }

  StaticJsonDocument<200> doc;
  DeserializationError error = deserializeJson(doc, file);
  if (error) {
    Serial.println("‚ùå –ü–æ–º–∏–ª–∫–∞ —Ä–æ–∑–±–æ—Ä—É JSON");
    bot.sendMessage("‚ùå –ü–æ–º–∏–ª–∫–∞ —Ä–æ–∑–±–æ—Ä—É JSON", CHAT_ID_ADMIN);
    return;
  }

  workTime = doc["workTime"];
  onPcTime = doc["onPcTime"];
  // lastMillis = doc["lastMillis"];
  
  Serial.println("‚úÖ –î–∞–Ω—ñ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ –∑ JSON!");
  file.close();
}

void deleteJSON()
{
  if (LittleFS.exists("/data.json")) {  // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —ñ—Å–Ω—É—î —Ñ–∞–π–ª
    if (LittleFS.remove("/data.json")) 
    {  // –í–∏–¥–∞–ª—è—î–º–æ —Ñ–∞–π–ª
      Serial.println("‚úÖ JSON-—Ñ–∞–π–ª —É—Å–ø—ñ—à–Ω–æ –≤–∏–¥–∞–ª–µ–Ω–∏–π!");
      bot.sendMessage("‚úÖ JSON-—Ñ–∞–π–ª —É—Å–ø—ñ—à–Ω–æ –≤–∏–¥–∞–ª–µ–Ω–∏–π!", CHAT_ID_ADMIN);
    }
    else
    {
      Serial.println("‚ùå –ü–æ–º–∏–ª–∫–∞ –≤–∏–¥–∞–ª–µ–Ω–Ω—è JSON-—Ñ–∞–π–ª—É!");
      bot.sendMessage("‚ùå –ü–æ–º–∏–ª–∫–∞ –≤–∏–¥–∞–ª–µ–Ω–Ω—è JSON-—Ñ–∞–π–ª—É!", CHAT_ID_ADMIN);
    }
  }
  else 
  {
    Serial.println("‚ö†Ô∏è –§–∞–π–ª JSON –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ!");
    bot.sendMessage("‚ö†Ô∏è –§–∞–π–ª JSON –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ!", CHAT_ID_ADMIN);
  }
}
